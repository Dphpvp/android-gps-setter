# https://github.com/marketplace/actions/automated-build-android-app-with-github-action
# https://github.com/marketplace/actions/publish-release

name: Generate APK
env:
  main_project_module: app
on:
  push:
    branches:
      - 'release/**'
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'v*.*.*'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set TAG
        if: github.event_name == 'push'
        run: |
          echo "version=$(echo '${{ github.ref_name }}')" >> $GITHUB_ENV

      - name: Set TAG
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "version=$(echo '${{ inputs.version }}' | awk -F 'v' '{print $2}')" >> $GITHUB_ENV

      - name: Set ENV
        run: | 
          echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV;
          echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Use JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21' # java version
          cache: 'gradle'

      - name: Build
        run: |
          echo "storeFile=/" >> local.properties;
          chmod +x ./gradlew;
          ./gradlew assembleDebug --stacktrace

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }} - ${{ env.date_today }}
          path: ${{ env.main_project_module }}/build/outputs/apk/

      - name: Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          draft: false # true
          prerelease: false
       
      - name: Publish FOSS
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/foss/debug/app-foss-debug.apk
          asset_name: app-foss-debug.apk
          asset_content_type: application/zip

      - name: Publish
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/full/debug/app-full-debug.apk
          asset_name: app-full-debug.apk
          asset_content_type: application/zip
